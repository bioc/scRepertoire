% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/viz.R
\name{quantContig}
\alias{quantContig}
\title{Quantify the unique clonotypes in the filtered contigs.}
\usage{
quantContig(
  df,
  cloneCall = "strict",
  chain = "both",
  scale = FALSE,
  group.by = NULL,
  split.by = NULL,
  order = TRUE,
  exportTable = FALSE
)
}
\arguments{
\item{df}{The product of combineTCR(), combineBCR(), expression2List(), or combineExpression().}

\item{cloneCall}{How to call the clonotype - VDJC gene (gene), 
CDR3 nucleotide (nt), CDR3 amino acid (aa), or 
VDJC gene + CDR3 nucleotide (strict).}

\item{chain}{indicate if both or a specific chain should be used - 
e.g. "both", "TRA", "TRG", "IGH", "IGL"}

\item{scale}{Converts the graphs into percentage of unique clonotypes.}

\item{group.by}{The column header used for grouping.}

\item{split.by}{If using a single-cell object, the column header 
to group the new list. NULL will return clusters.}

\item{order}{Maintain the order of the list when plotting}

\item{exportTable}{Returns the data frame used for forming the graph}
}
\value{
ggplot of the total or relative unique clonotypes
}
\description{
This function takes the output from combineTCR(), combineBCR(), or 
expression2List() and quantifies unique clonotypes. The unique clonotypes 
can be either reported as a raw output or scaled to the total number of 
clonotypes recovered using the scale parameter. Multiple sequencing 
runs can be group together using the group parameter. If a matrix output 
for the data is preferred, set exportTable = TRUE.
}
\examples{
#Making combined contig data
x <- contig_list
combined <- combineTCR(x, rep(c("PX", "PY", "PZ"), each=2), 
rep(c("P", "T"), 3))
quantContig(combined, cloneCall="strict", scale = TRUE)

}
