% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clonalNetwork.R
\name{clonalNetwork}
\alias{clonalNetwork}
\title{Visualize clonal network along reduced dimensions}
\usage{
clonalNetwork(
  sc.data,
  reduction = "umap",
  group.by = "ident",
  filter.clones = NULL,
  filter.identity = NULL,
  filter.proportion = NULL,
  filter.graph = FALSE,
  cloneCall = "strict",
  chain = "both",
  exportClones = FALSE,
  exportTable = FALSE,
  palette = "inferno"
)
}
\arguments{
\item{sc.data}{The single-cell object after \code{\link{combineExpression}}.}

\item{reduction}{The name of the dimensional reduction of the 
single-cell object.}

\item{group.by}{The variable to use for the nodes.}

\item{filter.clones}{Use to select the top n clones (e.g., \strong{filter.clones} 
= 2000) or n of clones based on the minimum number of all the comparators 
(e.g., \strong{filter.clone} = "min").}

\item{filter.identity}{Display the network for a specific level of the 
indicated identity.}

\item{filter.proportion}{Remove clones from the network below a specific
proportion.}

\item{filter.graph}{Remove the reciprocal edges from the half of the graph,
allowing for cleaner visualization.}

\item{cloneCall}{How to call the clone - VDJC gene (\strong{gene}), 
CDR3 nucleotide (\strong{nt}), CDR3 amino acid (\strong{aa}),
VDJC gene + CDR3 nucleotide (\strong{strict}) or a custom variable 
in the data.}

\item{chain}{indicate if both or a specific chain should be used - 
e.g. "both", "TRA", "TRG", "IGH", "IGL".}

\item{exportClones}{Exports a table of clones that are shared
across multiple identity groups and ordered by the total number
of clone copies.}

\item{exportTable}{Exports a table of the data into the global}

\item{palette}{Colors to use in visualization - input any 
\link[grDevices]{hcl.pals}.}
}
\value{
ggplot object
}
\description{
This function generates a network based on clonal 
proportions of an indicated identity and then superimposes
the network onto a single-cell object dimensional reduction
plot.
}
\examples{
\dontrun{
#Getting the combined contigs
combined <- combineTCR(contig_list, 
                        samples = c("P17B", "P17L", "P18B", "P18L", 
                                    "P19B","P19L", "P20B", "P20L"))

#Getting a sample of a Seurat object
scRep_example  <- get(data("scRep_example"))

#Using combineExpresion()
scRep_example  <- combineExpression(combined, scRep_example)

#Using clonalNetwork()
clonalNetwork(scRep_example, 
              reduction = "umap",
              group.by = "seurat_clusters")
}
              
}
\concept{SC_Functions}
